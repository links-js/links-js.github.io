{"version":3,"sources":["utils.coffee","typeahead.coffee","app.coffee"],"names":[],"mappings":"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","file":"index.min.js","sourcesContent":["injectCss = (css) ->\n  type = undefined\n  if typeof css == 'string'\n    css = css.trim()\n  else\n    return false\n  if css.indexOf('/') == 0 or css.indexOf('http:') == 0 or css.indexOf('https:') == 0\n    type = 'link'\n  else\n    type = 'style'\n  el = document.createElement(type)\n  el.type = 'text/css'\n  if type == 'link'\n    el.rel = 'stylesheet'\n    el.href = css\n  else\n    el.innerHTML = css\n  document.head.appendChild el\n  el\n\ngetOs = ->\n  platform = navigator.platform.toUpperCase()\n  if platform.indexOf('MAC') > -1\n    return 'mac'\n  if platform.indexOf('WIN') > -1\n    return 'windows'\n  if platform.indexOf('LINUX') > -1\n    return 'linux'\n  'windows'\n\nisYaml = (str) ->\n  /\\.(ya?ml)$/.test str\n\nstripQuotes = (str) ->\n  str.replace /^\"(.*)\"$/, '$1'\n\nsetDefaults = (links) ->\n  links.map (i) ->\n    if typeof i.type == 'undefined'\n      i.type = 'page'\n    i\n","getEngine = (links) ->\n  links = setDefaults(links)\n  new Bloodhound\n    datumTokenizer: (obj) ->\n      tokens = []\n      tokens = tokens.concat(Bloodhound.tokenizers.whitespace(obj.name.replace(/[\\(\\)]/g, ''))).concat(obj.tags.map((i) ->\n        '#' + i\n      )).concat(':' + obj.type).concat(obj.url)\n      tokens\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n    local: links\n    identify: (obj) ->\n      obj.name\n\ngetTypeIcon = (type) ->\n  typeClass = ''\n  switch type\n    when 'file' then typeClass = 'fa-download'\n    when 'bookmark' then typeClass = 'fa-bookmark'\n    else typeClass = 'fa-external-link-square'\n  typeClass\n\nsuggestionFn = (obj) ->\n  tags = obj.tags.map((i) -> '#' + i).join(' ')\n  \"\"\"\n  <div><div class=\"ta-obj\">\n    <div class=\"ta-row\">\n      <span class=\"name\">#{obj.name}</span>\n      <span class=\"type\"><i class=\"fa #{getTypeIcon(obj.type)}\"></i></span>\n      <span class=\"tags\">#{tags}</span>\n    </div>\n    <div class=\"ta-row\">\n      <span class=\"url\">#{obj._url}</span>\n    </div>\n  </div></div>\n  \"\"\"\n\n","angular\n  .module 'App', ['ngRoute', 'ngStorage', 'angular-cache']\n\n  .factory 'LinksLoader', ($http, $q, $rootScope) ->\n    getData = (response) ->\n      url = response.config.url\n      data = null\n      data = if isYaml(url) then data = jsyaml.load(response.data) else data = response.data\n      # Add _url to all response data object\n      data._url = url\n      data\n\n    combineObjects = (objArray) ->\n      allLinks = []\n      objArray.filter((obj) ->\n        if ! !obj and obj instanceof Object\n          if obj.hasOwnProperty('links')\n            return true\n        console.error 'Incorrect object:', obj\n        false\n        # discard everything else that doesn't have 'links' property\n      ).forEach (obj) ->\n        # _source for identify - base64\n        links = obj.links.map((link) ->\n          link._url = obj._url\n          link._source = window.btoa(obj._url)\n          link\n        )\n        allLinks = allLinks.concat(links)\n        return\n      objArray.push allLinks\n      objArray\n\n    getLastItem = (arr) ->\n      arr.slice(-1)[0]\n\n    {\n      load: ->\n        urls = $rootScope.settings.url.split('\\n').filter((url) -> url.length > 0)\n        promises = urls.map (url) ->\n          $http.get(url).then getData, (err) ->\n            console.error 'HTTP error:', err\n            $q.reject err\n        $q.all(promises).then(combineObjects).then getLastItem\n    }\n\n  .directive 'myTypeahead', ->\n    {\n      restrict: 'C'\n      scope: true\n      link: (scope, el, attrs) ->\n        input = $(el[0])\n        engine = null\n        scope.$root.$watch 'loadedLinks', (nVal, oVal) ->\n          if nVal != null\n            engine = getEngine(scope.$root.loadedLinks)\n            input.typeahead {\n              hint: false\n              highlight: true\n              minLength: 1\n            },\n              name: 'links'\n              source: engine\n              limit: scope.$root.settings.limit\n              templates: suggestion: suggestionFn\n              display: 'name'\n            input.bind 'typeahead:select', (e, obj) ->\n              target = scope.$root.settings[if obj.type == 'page' then 'openPage' else 'openFile']\n              target = stripQuotes(target)\n              target = if target == 'new' then '_blank' else '_self'\n              window.open obj.url, target\n          input.focus()\n        scope.$watch 'term', -> input.val(scope.term).trigger('input').focus()\n    }\n\n  .factory 'Settings', ($localStorage) ->\n    urls = [\n      '/db/db-global.yml'\n      '/db/db-' + getOs() + '.yml'\n    ].join('\\n')\n    storageDefault =\n      url: urls\n      openFile: 'current'\n      openPage: 'new'\n      cache: true\n      limit: 10\n    {\n      reset: ->\n        $localStorage.$reset storageDefault\n      storage: $localStorage.$default(storageDefault)\n    }\n\n  .controller 'SettingsCtrl', ($scope, $rootScope, Settings, $http) ->\n    status = ->\n      $scope.status = 'Please reload page'\n\n    $scope.reset = ->\n      Settings.reset()\n      status()\n\n    $scope.clear = ->\n      $http.defaults.cache.destroy()\n      status()\n\n  .controller 'TagsCtrl', ($scope, $rootScope) ->\n    tags = {}\n    $rootScope.loadedLinks\n      .map (i) -> i.tags\n      .forEach (itags) ->\n        itags.forEach (tag) ->\n          tags[tag] = if tags.hasOwnProperty(tag) then tags[tag] + 1 else 1\n\n    $scope.getClass = (val) ->\n      cls = 1\n      if val > 10\n        cls = 10\n      if val > 25\n        cls = 25\n      if val > 50\n        cls = 50\n      if val > 100\n        cls = 100\n      'tag-' + cls\n\n    $scope.tags = tags\n\n  .controller 'TypeCtrl', ($scope, $routeParams, $filter) ->\n    $scope.term = $filter('tagReplace')($routeParams.term)\n\n  .controller 'ListCtrl', ($scope, $routeParams, $filter) ->\n    engine = null\n\n    triggerChange = -> $scope.change() if $scope.term.length > 0\n\n    $scope.$root.$watch 'loadedLinks', (nVal, oVal) ->\n      engine = getEngine($scope.$root.loadedLinks)\n      triggerChange()\n\n    $scope.searchResults = []\n\n    $scope.change = -> engine.search($scope.term.trim(), (links) -> $scope.searchResults = links) if engine\n\n    $scope.term = $filter('tagReplace')($routeParams.term)\n    triggerChange()\n\n  .filter 'tagReplace', -> (input) -> if input then input.replace(/tag:/gi, '#') else ''\n  .filter 'noReferrer', -> (input) -> 'https://href.li/?' + input\n  .filter 'filename', -> (input) -> input.split('/').slice(-1)[0]\n  .filter 'getFaviconUrl', -> (input) -> 'https://www.google.com/s2/favicons?domain_url=' + input\n\n  .config ($routeProvider) ->\n    $routeProvider\n      .when '/type/:term?', templateUrl: 'typeahead.html', controller: 'TypeCtrl'\n      .when '/list/:term?', templateUrl: 'list.html', controller: 'ListCtrl'\n      .when '/tags', templateUrl: 'tags.html'\n      .otherwise redirectTo: '/type'\n\n  .run ($http, $rootScope, Settings, CacheFactory, LinksLoader) ->\n    $rootScope.settings = Settings.storage\n\n    injectCss $rootScope.settings.css if $rootScope.settings.css != null\n\n    if $rootScope.settings.cache == true\n      $http.defaults.cache = CacheFactory 'defaultCache',\n        maxAge: 15 * 60 * 1000\n        cacheFlushInterval: 60 * 60 * 1000\n        deleteOnExpire: 'aggressive'\n        storageMode: 'localStorage'\n\n    LinksLoader.load().then (links) -> $rootScope.loadedLinks = links\n"],"sourceRoot":"/source/"}